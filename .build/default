server {

    listen  80;

    root /var/www/public/;
    index index.html index.htm index.php;

    # Make site accessible from http://set-ip-address.xip.io
    server_name localhost;

    access_log /var/log/nginx/localhost.com-access.log;
    error_log  /var/log/nginx/localhost.com-error.log error;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.html /index.php?$query_string;
    }

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    # pass the PHP scripts to php7-fpm
    # Note: \.php$ is susceptible to file upload attacks
    # Consider using: "location ~ ^/(index|app|app_dev|config)\.php(/|$) {"
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # With php7-fpm:
        fastcgi_pass unix:/var/run/php7.2-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        #fastcgi_param REMOTE_ADDR $http_x_real_ip;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
    }

    # Deny .htaccess file access
    location ~ /\.ht {
        deny all;
    }

        # Redirect users to go to SSL Version
        #if ($ssl_protocol = "") {
        #    rewrite ^ https://$server_name$request_uri? permanent;
        #}

    }

server {

    listen 443 ssl;
    server_name localhost;

    # tell the browser we can only talk to self and google analytics.
    #add_header X-Content-Security-Policy "default-src 'self'; \
    #script-src 'self' https://ssl.google-analytics.com; \
    #img-src 'self' https://ssl.google-analytics.com";

    # SSL Settings (see: https://cipherli.st/ )

    # ciphers chosen and ordered for mix of performance, interoperability and security (supports IE8+)
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES128-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA128:DHE-RSA-AES128-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA128:ECDHE-RSA-AES128-SHA384:ECDHE-RSA-AES128-SHA128:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA384:AES128-GCM-SHA128:AES128-SHA128:AES128-SHA128:AES128-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout  10m;

    # tell users to go to SSL version next time
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

    # tell the browser dont allow hosting in a frame
    add_header X-Frame-Options DENY;

    # certificate
    ssl_certificate_key         certs.d/localhost.key;
    ssl_certificate             certs.d/localhost.cer;

    add_header X-Content-Type-Options nosniff;
    ssl_session_tickets off;

    # enable ocsp stapling
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx >= 1.3.7
    resolver 8.8.8.8 4.4.4.4 valid=300s;
    resolver_timeout 5s;

    # ssl trusted certificate
    ssl_trusted_certificate certs.d/localhost.cer;

    root /var/www/public;
    index index.html index.htm index.php;

    access_log off;
    error_log  /var/log/nginx/localhost-error.log error;
    expires @30m;

    #access_log /var/log/nginx/localhost.com-access.log;
    #error_log  /var/log/nginx/localhost.com-error.log error;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.html /index.php?$query_string;
    }

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    # redirect server error pages to the static page /50x.html
    #error_page   500 502 503 504  /50x.html;

    #location = /50x.html {
    #root   /usr/share/nginx/html;
    #}

    # pass the PHP scripts to php7-fpm
    # Note: \.php$ is susceptible to file upload attacks
    # Consider using: "location ~ ^/(index|app|app_dev|config)\.php(/|$) {"

    location ~ \.php$ {

        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # With php7-fpm:
        fastcgi_pass unix:/var/run/php7-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param REMOTE_ADDR $http_x_real_ip;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;

        fastcgi_param	SCRIPT_FILENAME   $request_filename;
        fastcgi_param	SCRIPT_NAME       $fastcgi_script_name;
        fastcgi_param	REQUEST_URI       $request_uri;
        fastcgi_param	DOCUMENT_URI      $document_uri;
        fastcgi_param	DOCUMENT_ROOT     $document_root;
        fastcgi_param	SERVER_PROTOCOL   $server_protocol;

        fastcgi_param HTTPS on;
    }

    # Deny .htaccess file access
    location ~ /\.ht {
        deny all;
    }
}
